#!/usr/bin/env zsh

# shortcut to this dotfiles path is $ZSH
export ZSH="$HOME/.dotfiles"
export PROJECTS="$HOME/code"                    # your project `c [tab]`
export JOURNAL_DIR="$HOME/Google Drive/notes"   # work journal

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export HOMEBREW_GITHUB_API_TOKEN="e4ae9ca7f28e6896a7e81a65760c0b35f16d5b7f"

# [base16] color schemes helper
BASE16_SHELL=$HOME/.config/base16-shell/
[ -n "$PS1" ] && [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"

####

# all of our zsh files
typeset -U config_files
config_files=($ZSH/*/*.zsh)

source "$ZSH/zsh/zshrc.plug"

# load the path files
# source "$ZSH/homebrew/path.zsh"
for file in ${(M)config_files:#*/path.zsh}; do
  source "$file"
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
  source "$file"
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit && compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}; do
  source "$file"
done

# homebrew zsh completions
fpath=(/usr/local/share/zsh-completions $fpath)

unset config_files

# own bins
export PATH=$HOME/bin:$PATH

# [ruby] initialize rbenv
eval "$(rbenv init -)"

# [python] virtualenvwrapper
export PATH=/usr/local/opt/python/libexec/bin:$PATH
export WORKON_HOME=$HOME/py_environments
source /usr/local/bin/virtualenvwrapper.sh

# [rust]
export PATH=$HOME/.cargo/bin:$PATH
# required for `racer`
export RUST_SRC_PATH=$HOME/.multirust/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/src

# [node] nvm, yarn-completions
export NVM_DIR="$HOME/.nvm"
source "/usr/local/opt/nvm/nvm.sh"
# tabtab source for yarn package - uninstall with `tabtab uninstall yarn`
[[ -f /Users/corrni/.config/yarn/global/node_modules/tabtab/.completions/yarn.zsh ]] && . /Users/corrni/.config/yarn/global/node_modules/tabtab/.completions/yarn.zsh

# [asdf] erlang, elixir
source "/usr/local/Cellar/asdf/0.3.0/asdf.sh"
source "/usr/local/Cellar/asdf/0.3.0/etc/bash_completion.d/asdf.bash"
export ERLANG_CONFIGURE_OPTIONS="--enable-darwin-64bit --with-ssl=/usr/local/opt/openssl --with-wx"

# [misc] dev tools, cli candy, ...
export PATH=$GOPATH/src/github.com/loadimpact/k6:$PATH
# eval "$(docker-machine env)"
eval "$(thefuck --alias)"

###

# gcloud cli
if [ -f '/Users/corrni/google-cloud-sdk/path.zsh.inc' ]; then source '/Users/corrni/google-cloud-sdk/path.zsh.inc'; fi
if [ -f '/Users/corrni/google-cloud-sdk/completion.zsh.inc' ]; then source '/Users/corrni/google-cloud-sdk/completion.zsh.inc'; fi

# use .localrc for SUPER SECRET CRAP that you don't
[[ -a ~/.localrc ]] && source ~/.localrc

# JVM stuff
#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/Users/corrni/.sdkman"
[[ -s "/Users/corrni/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/corrni/.sdkman/bin/sdkman-init.sh"
